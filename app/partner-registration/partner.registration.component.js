"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require('@angular/core');
var router_1 = require('@angular/router');
var partner_registration_service_1 = require('./partner.registration.service');
var partner_registration_info_1 = require('./partner.registration.info');
var PartnerRegistrationComponent = (function () {
    function PartnerRegistrationComponent(_router, _registrationService) {
        this._router = _router;
        this._registrationService = _registrationService;
        //let clients : Client [] = [ new Client("client1"), new Client("client2"), new Client("client3") ];
        this._partnerRegistrationInfo = new partner_registration_info_1.PartnerRegistrationInfo();
        //new PartnerRegistrationInfo("PartnerName",
        //"PartnerDescription", "999-999-9999", new EmailAddress("emailAddress"), "clientName", clients);
        // this._partnerRegistrationInfo.clients  = [ new Client("client")]
        //this._partnerRegistrationInfo.clients = [ new Client("clientName")];
        //this._partnerRegistrationInfo.phoneNumber = "Phone Number";
        //this._partnerRegistrationInfo.clients[0].clientName = "clientName";
        //this._partnerRegistrationInfo.emailAddress = new EmailAddress("heroes@hero.com");
        // partnerId is being autogenerated at the backend as  UUID
        //this._partnerRegistrationInfo.partnerDescription = "Partner Description";
    }
    PartnerRegistrationComponent.prototype.validatePhoneNumber = function (phonenumber) {
        console.log("validatePhoneNumber called");
        console.log("value=>" + phonenumber.value);
        if (phonenumber.value == "8134281428") {
            console.log("value true");
            this._partnerRegistrationInfo.hasPhoneNumberError = false;
        }
        else
            this._partnerRegistrationInfo.hasPhoneNumberError = true;
        //if(phonenumber.value == "asd")
        //    this._partnerRegistrationInfo.hasPhoneNumberError = "true";
        //    else
        //    this._partnerRegistrationInfo.hasPhoneNumberError = "false";
    };
    PartnerRegistrationComponent.prototype.onSubmit = function (partnerForm) {
        console.log('PartnerRegistration.onSubmit() - ENTER');
        //this._router.navigate (['RegistrationDetail']);
        console.log('Partner Name  ==> ' + this._partnerRegistrationInfo.partnerName);
        //console.log ('Partner Id ==> ' +  this._partnerRegistrationInfo.partnerId);
        console.log('Partner Description ==> ' + this._partnerRegistrationInfo.partnerDescription);
        console.log('Client  Name ==> ' + this._partnerRegistrationInfo.clientName);
        //this._registrationService.createRegistration(this._partnerRegistrationInfo).subscribe(registrationInfo => {
        //   return this._partnerRegistrationInfo = registrationInfo;
        //});
        console.log("form.name =>" + partnerForm.value.name);
        // TODO add validators
        this.validateEmail(this._partnerRegistrationInfo.emailAddress);
        console.log('PartnerRegistration.onSubmit() - EXIT');
        //this._router.navigate (['partners']);
        // post to the webservice
    };
    PartnerRegistrationComponent.prototype.validateEmail = function (value) {
        if (value = "joe.for@banter.com")
            return true;
        else
            return false;
    };
    PartnerRegistrationComponent = __decorate([
        core_1.Component({
            templateUrl: '/app/partner-registration/partner.registration.component.html',
            providers: [partner_registration_service_1.PartnerRegistrationService]
        }), 
        __metadata('design:paramtypes', [router_1.Router, partner_registration_service_1.PartnerRegistrationService])
    ], PartnerRegistrationComponent);
    return PartnerRegistrationComponent;
}());
exports.PartnerRegistrationComponent = PartnerRegistrationComponent;
//# sourceMappingURL=partner.registration.component.js.map